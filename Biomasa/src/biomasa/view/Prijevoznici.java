/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package biomasa.view;

import biomasa.controller.ObradaPrijevoznici;
import biomasa.model.Prijevoznik;
import java.awt.Color;
import java.awt.Component;
import java.util.Arrays;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

/**
 *
 * @author Đorđe
 */
public class Prijevoznici extends javax.swing.JInternalFrame {

    
    private ObradaPrijevoznici obrada;
    private Prijevoznik odabrano;
    
    /**
     * Creates new form Prijevoznici
     */
    public Prijevoznici() {
        initComponents();
        obrada=new ObradaPrijevoznici();
        lista.setModel(new DefaultListModel<>());
       setTitle("Prijevoznici: ");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uvjet = new javax.swing.JTextField();
        akcijaTrazi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList();
        mjesto = new javax.swing.JTextField();
        oib = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        akcijaDodaj = new javax.swing.JButton();
        akcijaPromijeni = new javax.swing.JButton();
        akcijaPovratak = new javax.swing.JButton();
        naziv = new javax.swing.JTextField();
        obrisi = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 153, 0));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setTitle("Prijevoznici");
        getContentPane().setLayout(null);

        uvjet.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        uvjet.setForeground(new java.awt.Color(255, 255, 255));
        getContentPane().add(uvjet);
        uvjet.setBounds(57, 101, 258, 20);

        akcijaTrazi.setBackground(new java.awt.Color(255, 102, 0));
        akcijaTrazi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaTrazi.setForeground(new java.awt.Color(255, 255, 255));
        akcijaTrazi.setText("Traži");
        akcijaTrazi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaTraziActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaTrazi);
        akcijaTrazi.setBounds(57, 45, 134, 38);

        lista.setBackground(new java.awt.Color(51, 153, 0));
        lista.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lista.setForeground(new java.awt.Color(255, 255, 255));
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(57, 140, 258, 268);
        getContentPane().add(mjesto);
        mjesto.setBounds(629, 197, 209, 20);
        getContentPane().add(oib);
        oib.setBounds(629, 254, 209, 20);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Naziv:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(510, 140, 91, 17);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Mjesto:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(510, 197, 91, 17);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Oib:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(510, 254, 91, 17);

        akcijaDodaj.setBackground(new java.awt.Color(255, 102, 0));
        akcijaDodaj.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaDodaj.setForeground(new java.awt.Color(255, 255, 255));
        akcijaDodaj.setText("Dodaj");
        akcijaDodaj.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaDodajActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaDodaj);
        akcijaDodaj.setBounds(510, 373, 91, 35);

        akcijaPromijeni.setBackground(new java.awt.Color(255, 102, 0));
        akcijaPromijeni.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaPromijeni.setForeground(new java.awt.Color(255, 255, 255));
        akcijaPromijeni.setText("Promijeni");
        akcijaPromijeni.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaPromijeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPromijeniActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaPromijeni);
        akcijaPromijeni.setBounds(629, 373, 100, 35);

        akcijaPovratak.setBackground(new java.awt.Color(255, 102, 0));
        akcijaPovratak.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        akcijaPovratak.setForeground(new java.awt.Color(255, 255, 255));
        akcijaPovratak.setText("Povratak");
        akcijaPovratak.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        akcijaPovratak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                akcijaPovratakActionPerformed(evt);
            }
        });
        getContentPane().add(akcijaPovratak);
        akcijaPovratak.setBounds(704, 45, 134, 38);
        getContentPane().add(naziv);
        naziv.setBounds(629, 140, 209, 20);

        obrisi.setBackground(new java.awt.Color(255, 102, 0));
        obrisi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        obrisi.setForeground(new java.awt.Color(255, 255, 255));
        obrisi.setText("Obriši");
        obrisi.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        obrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                obrisiActionPerformed(evt);
            }
        });
        getContentPane().add(obrisi);
        obrisi.setBounds(747, 373, 91, 35);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/kamion na vagi 1_resize (1).jpg"))); // NOI18N
        getContentPane().add(jLabel4);
        jLabel4.setBounds(-60, 0, 530, 500);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void akcijaPovratakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPovratakActionPerformed
        dispose();
    }//GEN-LAST:event_akcijaPovratakActionPerformed

    private void akcijaTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaTraziActionPerformed
        
         cistiPolja();
        
        List<Prijevoznik> entiteti = obrada.uzmi(uvjet.getText());
        
        DefaultListModel <Prijevoznik> m = new DefaultListModel<>();
        for (Prijevoznik prijevoznik : entiteti){
            
            m.addElement(prijevoznik);
        }
        lista.setModel(m);
        
    }//GEN-LAST:event_akcijaTraziActionPerformed

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        
         reset();
        odabrano = (Prijevoznik) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
        naziv.setText(odabrano.getNaziv());
        mjesto.setText(odabrano.getMjesto());
        oib.setText(odabrano.getOib());
        
    }//GEN-LAST:event_listaValueChanged

    private void akcijaDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaDodajActionPerformed
        
        reset();
        if(naziv.getText().trim().isEmpty()){
           greska(naziv, "Obavezan naziv");
           return;
       }
        
       if(!obrada.provjeraNaziv(naziv.getText().trim())){
             greska(naziv, "Naziv postoji, odabarite drugi");
           return;
        }
        
         if(oib.getText().trim().isEmpty()){
           greska(oib, "OIB je obavezan!");
           return;
       }
        
        if(!obrada.provjeraOib(oib.getText().trim())){
             greska(oib, "OIB postoji u bazi, odabarite drugi");
           return;
        }
                                      
        Prijevoznik p = new Prijevoznik();
        p.setNaziv(naziv.getText().trim());        
        p.setMjesto(mjesto.getText().trim());
        p.setOib(oib.getText().trim());
        
        p=obrada.dodaj(p);
        
      
            DefaultListModel<Prijevoznik> m =(DefaultListModel<Prijevoznik>) lista.getModel();
            m.addElement(p);
        
        
    }//GEN-LAST:event_akcijaDodajActionPerformed

    private void akcijaPromijeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_akcijaPromijeniActionPerformed
        
        if(odabrano==null){
    return;
}       
        reset();
        
//kontrole   
        
         if(naziv.getText().trim().isEmpty()){
           greska(naziv, "Obavezan naziv");
           return;
       }
        
          if(!odabrano.getNaziv().equals(naziv.getText().trim())){
            if(!obrada.provjeraNaziv(naziv.getText().trim())){
                 greska(naziv, "Naziv postoji, odaberite drugi");
                return;
            }
            
        }
         
           if(oib.getText().trim().isEmpty()){
           greska(oib, "Obavezan oib");
           return;
       }
           
         if(!odabrano.getOib().equals(oib.getText().trim())){
            if(!obrada.provjeraOib(oib.getText().trim())){
                 greska(oib, "Prijevoznik s ovim oib-om već postoji");
                return;
            }
            
        }
        
        odabrano.setNaziv(naziv.getText().trim());
        odabrano.setMjesto(mjesto.getText().trim());
        odabrano.setOib(oib.getText().trim());
       
        
        //promjena u bazi
        if(!obrada.promijeni(odabrano)){
            return;
        }
               
        lista.repaint();
                                                
        
    }//GEN-LAST:event_akcijaPromijeniActionPerformed

    private void obrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_obrisiActionPerformed
       
         odabrano = (Prijevoznik) lista.getSelectedValue();
        if(odabrano==null){
            return;
        }
       if(JOptionPane.showConfirmDialog(getParent(), "Jeste li sigurni da želite obrisati " + odabrano.getNaziv() + "?","Brisanje prijevoznika",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE)==JOptionPane.NO_OPTION){
            return;
        }
       
       if(!obrada.obrisi(odabrano)){
           return;
       }
       
       DefaultListModel<Prijevoznik> m =  (DefaultListModel<Prijevoznik>) lista.getModel();
       m.removeElement(odabrano);
       lista.repaint();
       cistiPolja();
    }//GEN-LAST:event_obrisiActionPerformed

    private void cistiPolja(){
        naziv.setText("");
        mjesto.setText("");
        oib.setText("");
    }
    
        private void reset() {
       
        for (Component c : this.getContentPane().getComponents()) {
            if (c instanceof JTextField){
                JComponent jc = (JComponent) c;
                jc.setBackground(Color.white);
                jc.setToolTipText("");
            }
        }
    }
        
         private void greska(JComponent komponenta, String obavijest){
           komponenta.setBackground(Color.yellow);
           komponenta.requestFocus();
           komponenta.setToolTipText(obavijest);
           
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton akcijaDodaj;
    private javax.swing.JButton akcijaPovratak;
    private javax.swing.JButton akcijaPromijeni;
    private javax.swing.JButton akcijaTrazi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lista;
    private javax.swing.JTextField mjesto;
    private javax.swing.JTextField naziv;
    private javax.swing.JButton obrisi;
    private javax.swing.JTextField oib;
    private javax.swing.JTextField uvjet;
    // End of variables declaration//GEN-END:variables
}
